#include <stdio.h>
#include <graphics.h>
#include <easyx.h>//包含图形库头文件,（安装好vs2022以后，需要去官网下载头文件）
#include <conio.h>//使用 _getch()

int main()
{
	//——框体初始化——
	//创建一个窗口，确定窗口的大小  //EM_SHOWCONSOLE	
	// 创建图形窗口时，保留控制台的显示// EM_NOCLOSE

	initgraph(640, 480, EW_SHOWCONSOLE);
	int x = 50, y = 50;

	while (1) 
	{//循环处理事务

		//双缓冲绘图，需要放在绘图代码之前和之后  (先画一个放在缓存里面

		BeginBatchDraw();

		//设置背景颜色
		setbkcolor(WHITE);	// one
		cleardevice();//清屏   two		

		setbkmode(TRANSPARENT);//设置背景模式	

		//控制球的移动
		setfillcolor(BROWN);
		fillcircle(x, y, 20);

		//EndBatchDraw();
		FlushBatchDraw();

		//解决方法1 输入一个键再判断
		if (_kbhit()) {//判断有没有键盘按下

			char key = _getch();//阻塞函数，不输入就在那等
			printf("%d,%c\n", key, key);
			switch (key) {

			case 72://上键
			case 'w':
			case 'W':
				y--;
				printf("上键\n");
				break;
			case 80://下键
			case 's':
			case 'S':
				y++;
				printf("下键\n");
				break;
			case 75://左键
			case 'a':
			case 'A':
				x--;
				printf("左键\n");
				break;
			case 77://右键
			case 'd':
			case 'D':
				x++;
				printf("右键\n");
				break;
			}
		}

		//鼠标消息
		if (MouseHit()) {
			MOUSEMSG msg = GetMouseMsg();
			switch (msg.uMsg) {
			case WM_LBUTTONDOWN:
				if (msg.x >= 200 && msg.x < 500 && msg.y > 50 && msg.y < 100) {
					printf("嘿嘿\n");
				}
				outtextxy(400, 400, "鼠标左键按下");
				printf("坐标(%d,%d)\n", msg.x, msg.y);
				break;
			case WM_RBUTTONDOWN:
				outtextxy(400, 400, "鼠标右键按下");
				printf("坐标(%d,%d)\n", msg.x, msg.y);
				break;
			}
		}
	}

	getchar();
	closegraph();//关闭窗口	
	return 0;
}